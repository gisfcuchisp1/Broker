//------------------------------------------------------------------------------
// <auto-generated>
//    這個程式碼是由範本產生。
//
//    對這個檔案進行手動變更可能導致您的應用程式產生未預期的行為。
//    如果重新產生程式碼，將會覆寫對這個檔案的手動變更。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM 關聯性中繼資料

[assembly: EdmRelationshipAttribute("WNSModel", "FK_REGISTER_NOTIFICATIONTYPE", "NOTIFICATIONTYPE", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WNSModel.NOTIFICATIONTYPE), "REGISTER", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WNSModel.REGISTER))]
[assembly: EdmRelationshipAttribute("WNSModel", "FK_REGISTER_POI_REGISTER", "REGISTER", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WNSModel.REGISTER), "REGISTER_POI", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WNSModel.REGISTER_POI), true)]
[assembly: EdmRelationshipAttribute("WNSModel", "FK_REGISTER_STATION_REGISTER_POI", "REGISTER_POI", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WNSModel.REGISTER_POI), "REGISTER_STATION", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WNSModel.REGISTER_STATION), true)]
[assembly: EdmRelationshipAttribute("WNSModel", "FK_STATION_UPDATE_FLAG_STATION", "STATION", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WNSModel.STATION), "STATION_UPDATE_FLAG", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WNSModel.STATION_UPDATE_FLAG))]

#endregion

namespace WNSModel
{
    #region 內容
    
    /// <summary>
    /// 沒有可用的中繼資料文件。
    /// </summary>
    public partial class WNSEntities : ObjectContext
    {
        #region 建構函式
    
        /// <summary>
        /// 使用在應用程式組態檔的 'WNSEntities' 區段中找到的連接字串，初始化新的 WNSEntities 物件。
        /// </summary>
        public WNSEntities() : base("name=WNSEntities", "WNSEntities")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 WNSEntities 物件。
        /// </summary>
        public WNSEntities(string connectionString) : base(connectionString, "WNSEntities")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 WNSEntities 物件。
        /// </summary>
        public WNSEntities(EntityConnection connection) : base(connection, "WNSEntities")
        {
            OnContextCreated();
        }
    
        #endregion
    
        #region 部分方法
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet 屬性
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        public ObjectSet<FREQUENCY> FREQUENCies
        {
            get
            {
                if ((_FREQUENCies == null))
                {
                    _FREQUENCies = base.CreateObjectSet<FREQUENCY>("FREQUENCies");
                }
                return _FREQUENCies;
            }
        }
        private ObjectSet<FREQUENCY> _FREQUENCies;
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        public ObjectSet<MONITORDATA> MONITORDATAs
        {
            get
            {
                if ((_MONITORDATAs == null))
                {
                    _MONITORDATAs = base.CreateObjectSet<MONITORDATA>("MONITORDATAs");
                }
                return _MONITORDATAs;
            }
        }
        private ObjectSet<MONITORDATA> _MONITORDATAs;
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        public ObjectSet<USER> USERs
        {
            get
            {
                if ((_USERs == null))
                {
                    _USERs = base.CreateObjectSet<USER>("USERs");
                }
                return _USERs;
            }
        }
        private ObjectSet<USER> _USERs;
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        public ObjectSet<NOTIFICATIONTYPE> NOTIFICATIONTYPEs
        {
            get
            {
                if ((_NOTIFICATIONTYPEs == null))
                {
                    _NOTIFICATIONTYPEs = base.CreateObjectSet<NOTIFICATIONTYPE>("NOTIFICATIONTYPEs");
                }
                return _NOTIFICATIONTYPEs;
            }
        }
        private ObjectSet<NOTIFICATIONTYPE> _NOTIFICATIONTYPEs;
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        public ObjectSet<REGISTER> REGISTERs
        {
            get
            {
                if ((_REGISTERs == null))
                {
                    _REGISTERs = base.CreateObjectSet<REGISTER>("REGISTERs");
                }
                return _REGISTERs;
            }
        }
        private ObjectSet<REGISTER> _REGISTERs;
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        public ObjectSet<REGISTER_STATION> REGISTER_STATION
        {
            get
            {
                if ((_REGISTER_STATION == null))
                {
                    _REGISTER_STATION = base.CreateObjectSet<REGISTER_STATION>("REGISTER_STATION");
                }
                return _REGISTER_STATION;
            }
        }
        private ObjectSet<REGISTER_STATION> _REGISTER_STATION;
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        public ObjectSet<REGISTER_POI> REGISTER_POI
        {
            get
            {
                if ((_REGISTER_POI == null))
                {
                    _REGISTER_POI = base.CreateObjectSet<REGISTER_POI>("REGISTER_POI");
                }
                return _REGISTER_POI;
            }
        }
        private ObjectSet<REGISTER_POI> _REGISTER_POI;
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        public ObjectSet<STATION_UPDATE_FLAG> STATION_UPDATE_FLAG
        {
            get
            {
                if ((_STATION_UPDATE_FLAG == null))
                {
                    _STATION_UPDATE_FLAG = base.CreateObjectSet<STATION_UPDATE_FLAG>("STATION_UPDATE_FLAG");
                }
                return _STATION_UPDATE_FLAG;
            }
        }
        private ObjectSet<STATION_UPDATE_FLAG> _STATION_UPDATE_FLAG;
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        public ObjectSet<STATION> STATIONs
        {
            get
            {
                if ((_STATIONs == null))
                {
                    _STATIONs = base.CreateObjectSet<STATION>("STATIONs");
                }
                return _STATIONs;
            }
        }
        private ObjectSet<STATION> _STATIONs;

        #endregion
        #region AddTo 方法
    
        /// <summary>
        /// 將新物件加入 FREQUENCies EntitySet 的方法已被取代。請考慮改為使用關聯的 ObjectSet&lt;T&gt; 屬性的 .Add 方法。
        /// </summary>
        public void AddToFREQUENCies(FREQUENCY fREQUENCY)
        {
            base.AddObject("FREQUENCies", fREQUENCY);
        }
    
        /// <summary>
        /// 將新物件加入 MONITORDATAs EntitySet 的方法已被取代。請考慮改為使用關聯的 ObjectSet&lt;T&gt; 屬性的 .Add 方法。
        /// </summary>
        public void AddToMONITORDATAs(MONITORDATA mONITORDATA)
        {
            base.AddObject("MONITORDATAs", mONITORDATA);
        }
    
        /// <summary>
        /// 將新物件加入 USERs EntitySet 的方法已被取代。請考慮改為使用關聯的 ObjectSet&lt;T&gt; 屬性的 .Add 方法。
        /// </summary>
        public void AddToUSERs(USER uSER)
        {
            base.AddObject("USERs", uSER);
        }
    
        /// <summary>
        /// 將新物件加入 NOTIFICATIONTYPEs EntitySet 的方法已被取代。請考慮改為使用關聯的 ObjectSet&lt;T&gt; 屬性的 .Add 方法。
        /// </summary>
        public void AddToNOTIFICATIONTYPEs(NOTIFICATIONTYPE nOTIFICATIONTYPE)
        {
            base.AddObject("NOTIFICATIONTYPEs", nOTIFICATIONTYPE);
        }
    
        /// <summary>
        /// 將新物件加入 REGISTERs EntitySet 的方法已被取代。請考慮改為使用關聯的 ObjectSet&lt;T&gt; 屬性的 .Add 方法。
        /// </summary>
        public void AddToREGISTERs(REGISTER rEGISTER)
        {
            base.AddObject("REGISTERs", rEGISTER);
        }
    
        /// <summary>
        /// 將新物件加入 REGISTER_STATION EntitySet 的方法已被取代。請考慮改為使用關聯的 ObjectSet&lt;T&gt; 屬性的 .Add 方法。
        /// </summary>
        public void AddToREGISTER_STATION(REGISTER_STATION rEGISTER_STATION)
        {
            base.AddObject("REGISTER_STATION", rEGISTER_STATION);
        }
    
        /// <summary>
        /// 將新物件加入 REGISTER_POI EntitySet 的方法已被取代。請考慮改為使用關聯的 ObjectSet&lt;T&gt; 屬性的 .Add 方法。
        /// </summary>
        public void AddToREGISTER_POI(REGISTER_POI rEGISTER_POI)
        {
            base.AddObject("REGISTER_POI", rEGISTER_POI);
        }
    
        /// <summary>
        /// 將新物件加入 STATION_UPDATE_FLAG EntitySet 的方法已被取代。請考慮改為使用關聯的 ObjectSet&lt;T&gt; 屬性的 .Add 方法。
        /// </summary>
        public void AddToSTATION_UPDATE_FLAG(STATION_UPDATE_FLAG sTATION_UPDATE_FLAG)
        {
            base.AddObject("STATION_UPDATE_FLAG", sTATION_UPDATE_FLAG);
        }
    
        /// <summary>
        /// 將新物件加入 STATIONs EntitySet 的方法已被取代。請考慮改為使用關聯的 ObjectSet&lt;T&gt; 屬性的 .Add 方法。
        /// </summary>
        public void AddToSTATIONs(STATION sTATION)
        {
            base.AddObject("STATIONs", sTATION);
        }

        #endregion
    }
    

    #endregion
    
    #region 實體
    
    /// <summary>
    /// 沒有可用的中繼資料文件。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WNSModel", Name="FREQUENCY")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FREQUENCY : EntityObject
    {
        #region Factory 方法
    
        /// <summary>
        /// 建立新 FREQUENCY 物件。
        /// </summary>
        /// <param name="nO">NO 屬性的初始值。</param>
        /// <param name="fREQUENCY_UNIT">FREQUENCY_UNIT 屬性的初始值。</param>
        public static FREQUENCY CreateFREQUENCY(global::System.Int32 nO, global::System.String fREQUENCY_UNIT)
        {
            FREQUENCY fREQUENCY = new FREQUENCY();
            fREQUENCY.NO = nO;
            fREQUENCY.FREQUENCY_UNIT = fREQUENCY_UNIT;
            return fREQUENCY;
        }

        #endregion
        #region 基本屬性
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NO
        {
            get
            {
                return _NO;
            }
            set
            {
                if (_NO != value)
                {
                    OnNOChanging(value);
                    ReportPropertyChanging("NO");
                    _NO = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("NO");
                    OnNOChanged();
                }
            }
        }
        private global::System.Int32 _NO;
        partial void OnNOChanging(global::System.Int32 value);
        partial void OnNOChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FREQUENCY_UNIT
        {
            get
            {
                return _FREQUENCY_UNIT;
            }
            set
            {
                OnFREQUENCY_UNITChanging(value);
                ReportPropertyChanging("FREQUENCY_UNIT");
                _FREQUENCY_UNIT = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FREQUENCY_UNIT");
                OnFREQUENCY_UNITChanged();
            }
        }
        private global::System.String _FREQUENCY_UNIT;
        partial void OnFREQUENCY_UNITChanging(global::System.String value);
        partial void OnFREQUENCY_UNITChanged();

        #endregion
    
    }
    
    /// <summary>
    /// 沒有可用的中繼資料文件。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WNSModel", Name="MONITORDATA")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MONITORDATA : EntityObject
    {
        #region Factory 方法
    
        /// <summary>
        /// 建立新 MONITORDATA 物件。
        /// </summary>
        /// <param name="nO">NO 屬性的初始值。</param>
        /// <param name="sITEID">SITEID 屬性的初始值。</param>
        /// <param name="vALUE">VALUE 屬性的初始值。</param>
        /// <param name="uPSTREAM">UPSTREAM 屬性的初始值。</param>
        public static MONITORDATA CreateMONITORDATA(global::System.Int32 nO, global::System.String sITEID, global::System.Double vALUE, global::System.String uPSTREAM)
        {
            MONITORDATA mONITORDATA = new MONITORDATA();
            mONITORDATA.NO = nO;
            mONITORDATA.SITEID = sITEID;
            mONITORDATA.VALUE = vALUE;
            mONITORDATA.UPSTREAM = uPSTREAM;
            return mONITORDATA;
        }

        #endregion
        #region 基本屬性
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NO
        {
            get
            {
                return _NO;
            }
            set
            {
                if (_NO != value)
                {
                    OnNOChanging(value);
                    ReportPropertyChanging("NO");
                    _NO = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("NO");
                    OnNOChanged();
                }
            }
        }
        private global::System.Int32 _NO;
        partial void OnNOChanging(global::System.Int32 value);
        partial void OnNOChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SITEID
        {
            get
            {
                return _SITEID;
            }
            set
            {
                OnSITEIDChanging(value);
                ReportPropertyChanging("SITEID");
                _SITEID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SITEID");
                OnSITEIDChanged();
            }
        }
        private global::System.String _SITEID;
        partial void OnSITEIDChanging(global::System.String value);
        partial void OnSITEIDChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double VALUE
        {
            get
            {
                return _VALUE;
            }
            set
            {
                OnVALUEChanging(value);
                ReportPropertyChanging("VALUE");
                _VALUE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VALUE");
                OnVALUEChanged();
            }
        }
        private global::System.Double _VALUE;
        partial void OnVALUEChanging(global::System.Double value);
        partial void OnVALUEChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UPSTREAM
        {
            get
            {
                return _UPSTREAM;
            }
            set
            {
                OnUPSTREAMChanging(value);
                ReportPropertyChanging("UPSTREAM");
                _UPSTREAM = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UPSTREAM");
                OnUPSTREAMChanged();
            }
        }
        private global::System.String _UPSTREAM;
        partial void OnUPSTREAMChanging(global::System.String value);
        partial void OnUPSTREAMChanged();

        #endregion
    
    }
    
    /// <summary>
    /// 沒有可用的中繼資料文件。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WNSModel", Name="NOTIFICATIONTYPE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class NOTIFICATIONTYPE : EntityObject
    {
        #region Factory 方法
    
        /// <summary>
        /// 建立新 NOTIFICATIONTYPE 物件。
        /// </summary>
        /// <param name="nO">NO 屬性的初始值。</param>
        /// <param name="tYPE">TYPE 屬性的初始值。</param>
        public static NOTIFICATIONTYPE CreateNOTIFICATIONTYPE(global::System.Int32 nO, global::System.String tYPE)
        {
            NOTIFICATIONTYPE nOTIFICATIONTYPE = new NOTIFICATIONTYPE();
            nOTIFICATIONTYPE.NO = nO;
            nOTIFICATIONTYPE.TYPE = tYPE;
            return nOTIFICATIONTYPE;
        }

        #endregion
        #region 基本屬性
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NO
        {
            get
            {
                return _NO;
            }
            set
            {
                if (_NO != value)
                {
                    OnNOChanging(value);
                    ReportPropertyChanging("NO");
                    _NO = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("NO");
                    OnNOChanged();
                }
            }
        }
        private global::System.Int32 _NO;
        partial void OnNOChanging(global::System.Int32 value);
        partial void OnNOChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TYPE
        {
            get
            {
                return _TYPE;
            }
            set
            {
                OnTYPEChanging(value);
                ReportPropertyChanging("TYPE");
                _TYPE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TYPE");
                OnTYPEChanged();
            }
        }
        private global::System.String _TYPE;
        partial void OnTYPEChanging(global::System.String value);
        partial void OnTYPEChanged();

        #endregion
    
        #region 導覽屬性
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WNSModel", "FK_REGISTER_NOTIFICATIONTYPE", "REGISTER")]
        public EntityCollection<REGISTER> REGISTERs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<REGISTER>("WNSModel.FK_REGISTER_NOTIFICATIONTYPE", "REGISTER");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<REGISTER>("WNSModel.FK_REGISTER_NOTIFICATIONTYPE", "REGISTER", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 沒有可用的中繼資料文件。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WNSModel", Name="REGISTER")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class REGISTER : EntityObject
    {
        #region Factory 方法
    
        /// <summary>
        /// 建立新 REGISTER 物件。
        /// </summary>
        /// <param name="nO">NO 屬性的初始值。</param>
        /// <param name="uID">UID 屬性的初始值。</param>
        /// <param name="rOLE">ROLE 屬性的初始值。</param>
        public static REGISTER CreateREGISTER(global::System.Int64 nO, global::System.Int64 uID, global::System.String rOLE)
        {
            REGISTER rEGISTER = new REGISTER();
            rEGISTER.NO = nO;
            rEGISTER.UID = uID;
            rEGISTER.ROLE = rOLE;
            return rEGISTER;
        }

        #endregion
        #region 基本屬性
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 NO
        {
            get
            {
                return _NO;
            }
            set
            {
                if (_NO != value)
                {
                    OnNOChanging(value);
                    ReportPropertyChanging("NO");
                    _NO = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("NO");
                    OnNOChanged();
                }
            }
        }
        private global::System.Int64 _NO;
        partial void OnNOChanging(global::System.Int64 value);
        partial void OnNOChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EMAIL
        {
            get
            {
                return _EMAIL;
            }
            set
            {
                OnEMAILChanging(value);
                ReportPropertyChanging("EMAIL");
                _EMAIL = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EMAIL");
                OnEMAILChanged();
            }
        }
        private global::System.String _EMAIL;
        partial void OnEMAILChanging(global::System.String value);
        partial void OnEMAILChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 UID
        {
            get
            {
                return _UID;
            }
            set
            {
                OnUIDChanging(value);
                ReportPropertyChanging("UID");
                _UID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UID");
                OnUIDChanged();
            }
        }
        private global::System.Int64 _UID;
        partial void OnUIDChanging(global::System.Int64 value);
        partial void OnUIDChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ROLE
        {
            get
            {
                return _ROLE;
            }
            set
            {
                OnROLEChanging(value);
                ReportPropertyChanging("ROLE");
                _ROLE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ROLE");
                OnROLEChanged();
            }
        }
        private global::System.String _ROLE;
        partial void OnROLEChanging(global::System.String value);
        partial void OnROLEChanged();

        #endregion
    
        #region 導覽屬性
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WNSModel", "FK_REGISTER_NOTIFICATIONTYPE", "NOTIFICATIONTYPE")]
        public NOTIFICATIONTYPE NOTIFICATIONTYPE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NOTIFICATIONTYPE>("WNSModel.FK_REGISTER_NOTIFICATIONTYPE", "NOTIFICATIONTYPE").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NOTIFICATIONTYPE>("WNSModel.FK_REGISTER_NOTIFICATIONTYPE", "NOTIFICATIONTYPE").Value = value;
            }
        }
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<NOTIFICATIONTYPE> NOTIFICATIONTYPEReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NOTIFICATIONTYPE>("WNSModel.FK_REGISTER_NOTIFICATIONTYPE", "NOTIFICATIONTYPE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<NOTIFICATIONTYPE>("WNSModel.FK_REGISTER_NOTIFICATIONTYPE", "NOTIFICATIONTYPE", value);
                }
            }
        }
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WNSModel", "FK_REGISTER_POI_REGISTER", "REGISTER_POI")]
        public EntityCollection<REGISTER_POI> REGISTER_POI
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<REGISTER_POI>("WNSModel.FK_REGISTER_POI_REGISTER", "REGISTER_POI");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<REGISTER_POI>("WNSModel.FK_REGISTER_POI_REGISTER", "REGISTER_POI", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 沒有可用的中繼資料文件。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WNSModel", Name="REGISTER_POI")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class REGISTER_POI : EntityObject
    {
        #region Factory 方法
    
        /// <summary>
        /// 建立新 REGISTER_POI 物件。
        /// </summary>
        /// <param name="rEGISTER_NO">REGISTER_NO 屬性的初始值。</param>
        /// <param name="sEQ">SEQ 屬性的初始值。</param>
        /// <param name="pOI_TYPE">POI_TYPE 屬性的初始值。</param>
        /// <param name="fREQUENCY">FREQUENCY 屬性的初始值。</param>
        /// <param name="sTATUS">STATUS 屬性的初始值。</param>
        /// <param name="nOTIFICATION_FLAG">NOTIFICATION_FLAG 屬性的初始值。</param>
        public static REGISTER_POI CreateREGISTER_POI(global::System.Int64 rEGISTER_NO, global::System.Int64 sEQ, global::System.String pOI_TYPE, global::System.Int64 fREQUENCY, global::System.Byte sTATUS, global::System.Byte nOTIFICATION_FLAG)
        {
            REGISTER_POI rEGISTER_POI = new REGISTER_POI();
            rEGISTER_POI.REGISTER_NO = rEGISTER_NO;
            rEGISTER_POI.SEQ = sEQ;
            rEGISTER_POI.POI_TYPE = pOI_TYPE;
            rEGISTER_POI.FREQUENCY = fREQUENCY;
            rEGISTER_POI.STATUS = sTATUS;
            rEGISTER_POI.NOTIFICATION_FLAG = nOTIFICATION_FLAG;
            return rEGISTER_POI;
        }

        #endregion
        #region 基本屬性
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 REGISTER_NO
        {
            get
            {
                return _REGISTER_NO;
            }
            set
            {
                if (_REGISTER_NO != value)
                {
                    OnREGISTER_NOChanging(value);
                    ReportPropertyChanging("REGISTER_NO");
                    _REGISTER_NO = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("REGISTER_NO");
                    OnREGISTER_NOChanged();
                }
            }
        }
        private global::System.Int64 _REGISTER_NO;
        partial void OnREGISTER_NOChanging(global::System.Int64 value);
        partial void OnREGISTER_NOChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 SEQ
        {
            get
            {
                return _SEQ;
            }
            set
            {
                if (_SEQ != value)
                {
                    OnSEQChanging(value);
                    ReportPropertyChanging("SEQ");
                    _SEQ = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SEQ");
                    OnSEQChanged();
                }
            }
        }
        private global::System.Int64 _SEQ;
        partial void OnSEQChanging(global::System.Int64 value);
        partial void OnSEQChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String POI_TYPE
        {
            get
            {
                return _POI_TYPE;
            }
            set
            {
                OnPOI_TYPEChanging(value);
                ReportPropertyChanging("POI_TYPE");
                _POI_TYPE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("POI_TYPE");
                OnPOI_TYPEChanged();
            }
        }
        private global::System.String _POI_TYPE;
        partial void OnPOI_TYPEChanging(global::System.String value);
        partial void OnPOI_TYPEChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String STATION_ID
        {
            get
            {
                return _STATION_ID;
            }
            set
            {
                OnSTATION_IDChanging(value);
                ReportPropertyChanging("STATION_ID");
                _STATION_ID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("STATION_ID");
                OnSTATION_IDChanged();
            }
        }
        private global::System.String _STATION_ID;
        partial void OnSTATION_IDChanging(global::System.String value);
        partial void OnSTATION_IDChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> LNG
        {
            get
            {
                return _LNG;
            }
            set
            {
                OnLNGChanging(value);
                ReportPropertyChanging("LNG");
                _LNG = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LNG");
                OnLNGChanged();
            }
        }
        private Nullable<global::System.Double> _LNG;
        partial void OnLNGChanging(Nullable<global::System.Double> value);
        partial void OnLNGChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> LAT
        {
            get
            {
                return _LAT;
            }
            set
            {
                OnLATChanging(value);
                ReportPropertyChanging("LAT");
                _LAT = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LAT");
                OnLATChanged();
            }
        }
        private Nullable<global::System.Double> _LAT;
        partial void OnLATChanging(Nullable<global::System.Double> value);
        partial void OnLATChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> SW_LEVEL_THRESHOLD
        {
            get
            {
                return _SW_LEVEL_THRESHOLD;
            }
            set
            {
                OnSW_LEVEL_THRESHOLDChanging(value);
                ReportPropertyChanging("SW_LEVEL_THRESHOLD");
                _SW_LEVEL_THRESHOLD = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SW_LEVEL_THRESHOLD");
                OnSW_LEVEL_THRESHOLDChanged();
            }
        }
        private Nullable<global::System.Double> _SW_LEVEL_THRESHOLD;
        partial void OnSW_LEVEL_THRESHOLDChanging(Nullable<global::System.Double> value);
        partial void OnSW_LEVEL_THRESHOLDChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> SW_FLOW_THRESHOLD
        {
            get
            {
                return _SW_FLOW_THRESHOLD;
            }
            set
            {
                OnSW_FLOW_THRESHOLDChanging(value);
                ReportPropertyChanging("SW_FLOW_THRESHOLD");
                _SW_FLOW_THRESHOLD = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SW_FLOW_THRESHOLD");
                OnSW_FLOW_THRESHOLDChanged();
            }
        }
        private Nullable<global::System.Double> _SW_FLOW_THRESHOLD;
        partial void OnSW_FLOW_THRESHOLDChanging(Nullable<global::System.Double> value);
        partial void OnSW_FLOW_THRESHOLDChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 FREQUENCY
        {
            get
            {
                return _FREQUENCY;
            }
            set
            {
                OnFREQUENCYChanging(value);
                ReportPropertyChanging("FREQUENCY");
                _FREQUENCY = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FREQUENCY");
                OnFREQUENCYChanged();
            }
        }
        private global::System.Int64 _FREQUENCY;
        partial void OnFREQUENCYChanging(global::System.Int64 value);
        partial void OnFREQUENCYChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte STATUS
        {
            get
            {
                return _STATUS;
            }
            set
            {
                OnSTATUSChanging(value);
                ReportPropertyChanging("STATUS");
                _STATUS = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("STATUS");
                OnSTATUSChanged();
            }
        }
        private global::System.Byte _STATUS;
        partial void OnSTATUSChanging(global::System.Byte value);
        partial void OnSTATUSChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte NOTIFICATION_FLAG
        {
            get
            {
                return _NOTIFICATION_FLAG;
            }
            set
            {
                OnNOTIFICATION_FLAGChanging(value);
                ReportPropertyChanging("NOTIFICATION_FLAG");
                _NOTIFICATION_FLAG = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NOTIFICATION_FLAG");
                OnNOTIFICATION_FLAGChanged();
            }
        }
        private global::System.Byte _NOTIFICATION_FLAG;
        partial void OnNOTIFICATION_FLAGChanging(global::System.Byte value);
        partial void OnNOTIFICATION_FLAGChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SW_LEVEL_THRESHOLD_UNIT
        {
            get
            {
                return _SW_LEVEL_THRESHOLD_UNIT;
            }
            set
            {
                OnSW_LEVEL_THRESHOLD_UNITChanging(value);
                ReportPropertyChanging("SW_LEVEL_THRESHOLD_UNIT");
                _SW_LEVEL_THRESHOLD_UNIT = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SW_LEVEL_THRESHOLD_UNIT");
                OnSW_LEVEL_THRESHOLD_UNITChanged();
            }
        }
        private global::System.String _SW_LEVEL_THRESHOLD_UNIT;
        partial void OnSW_LEVEL_THRESHOLD_UNITChanging(global::System.String value);
        partial void OnSW_LEVEL_THRESHOLD_UNITChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SW_FLOW_THRESHOLD_UNIT
        {
            get
            {
                return _SW_FLOW_THRESHOLD_UNIT;
            }
            set
            {
                OnSW_FLOW_THRESHOLD_UNITChanging(value);
                ReportPropertyChanging("SW_FLOW_THRESHOLD_UNIT");
                _SW_FLOW_THRESHOLD_UNIT = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SW_FLOW_THRESHOLD_UNIT");
                OnSW_FLOW_THRESHOLD_UNITChanged();
            }
        }
        private global::System.String _SW_FLOW_THRESHOLD_UNIT;
        partial void OnSW_FLOW_THRESHOLD_UNITChanging(global::System.String value);
        partial void OnSW_FLOW_THRESHOLD_UNITChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> SW_LEVEL_THRESHOLD_METRIC
        {
            get
            {
                return _SW_LEVEL_THRESHOLD_METRIC;
            }
            set
            {
                OnSW_LEVEL_THRESHOLD_METRICChanging(value);
                ReportPropertyChanging("SW_LEVEL_THRESHOLD_METRIC");
                _SW_LEVEL_THRESHOLD_METRIC = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SW_LEVEL_THRESHOLD_METRIC");
                OnSW_LEVEL_THRESHOLD_METRICChanged();
            }
        }
        private Nullable<global::System.Double> _SW_LEVEL_THRESHOLD_METRIC;
        partial void OnSW_LEVEL_THRESHOLD_METRICChanging(Nullable<global::System.Double> value);
        partial void OnSW_LEVEL_THRESHOLD_METRICChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> SW_FLOW_THRESHOLD_METRIC
        {
            get
            {
                return _SW_FLOW_THRESHOLD_METRIC;
            }
            set
            {
                OnSW_FLOW_THRESHOLD_METRICChanging(value);
                ReportPropertyChanging("SW_FLOW_THRESHOLD_METRIC");
                _SW_FLOW_THRESHOLD_METRIC = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SW_FLOW_THRESHOLD_METRIC");
                OnSW_FLOW_THRESHOLD_METRICChanged();
            }
        }
        private Nullable<global::System.Double> _SW_FLOW_THRESHOLD_METRIC;
        partial void OnSW_FLOW_THRESHOLD_METRICChanging(Nullable<global::System.Double> value);
        partial void OnSW_FLOW_THRESHOLD_METRICChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ALERT_NOTIFCATION_TIME
        {
            get
            {
                return _ALERT_NOTIFCATION_TIME;
            }
            set
            {
                OnALERT_NOTIFCATION_TIMEChanging(value);
                ReportPropertyChanging("ALERT_NOTIFCATION_TIME");
                _ALERT_NOTIFCATION_TIME = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ALERT_NOTIFCATION_TIME");
                OnALERT_NOTIFCATION_TIMEChanged();
            }
        }
        private Nullable<global::System.DateTime> _ALERT_NOTIFCATION_TIME;
        partial void OnALERT_NOTIFCATION_TIMEChanging(Nullable<global::System.DateTime> value);
        partial void OnALERT_NOTIFCATION_TIMEChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> MIN_LNG
        {
            get
            {
                return _MIN_LNG;
            }
            set
            {
                OnMIN_LNGChanging(value);
                ReportPropertyChanging("MIN_LNG");
                _MIN_LNG = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MIN_LNG");
                OnMIN_LNGChanged();
            }
        }
        private Nullable<global::System.Double> _MIN_LNG;
        partial void OnMIN_LNGChanging(Nullable<global::System.Double> value);
        partial void OnMIN_LNGChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> MIN_LAT
        {
            get
            {
                return _MIN_LAT;
            }
            set
            {
                OnMIN_LATChanging(value);
                ReportPropertyChanging("MIN_LAT");
                _MIN_LAT = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MIN_LAT");
                OnMIN_LATChanged();
            }
        }
        private Nullable<global::System.Double> _MIN_LAT;
        partial void OnMIN_LATChanging(Nullable<global::System.Double> value);
        partial void OnMIN_LATChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> MAX_LNG
        {
            get
            {
                return _MAX_LNG;
            }
            set
            {
                OnMAX_LNGChanging(value);
                ReportPropertyChanging("MAX_LNG");
                _MAX_LNG = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MAX_LNG");
                OnMAX_LNGChanged();
            }
        }
        private Nullable<global::System.Double> _MAX_LNG;
        partial void OnMAX_LNGChanging(Nullable<global::System.Double> value);
        partial void OnMAX_LNGChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> MAX_LAT
        {
            get
            {
                return _MAX_LAT;
            }
            set
            {
                OnMAX_LATChanging(value);
                ReportPropertyChanging("MAX_LAT");
                _MAX_LAT = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MAX_LAT");
                OnMAX_LATChanged();
            }
        }
        private Nullable<global::System.Double> _MAX_LAT;
        partial void OnMAX_LATChanging(Nullable<global::System.Double> value);
        partial void OnMAX_LATChanged();

        #endregion
    
        #region 導覽屬性
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WNSModel", "FK_REGISTER_POI_REGISTER", "REGISTER")]
        public REGISTER REGISTER
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<REGISTER>("WNSModel.FK_REGISTER_POI_REGISTER", "REGISTER").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<REGISTER>("WNSModel.FK_REGISTER_POI_REGISTER", "REGISTER").Value = value;
            }
        }
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<REGISTER> REGISTERReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<REGISTER>("WNSModel.FK_REGISTER_POI_REGISTER", "REGISTER");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<REGISTER>("WNSModel.FK_REGISTER_POI_REGISTER", "REGISTER", value);
                }
            }
        }
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WNSModel", "FK_REGISTER_STATION_REGISTER_POI", "REGISTER_STATION")]
        public EntityCollection<REGISTER_STATION> REGISTER_STATION
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<REGISTER_STATION>("WNSModel.FK_REGISTER_STATION_REGISTER_POI", "REGISTER_STATION");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<REGISTER_STATION>("WNSModel.FK_REGISTER_STATION_REGISTER_POI", "REGISTER_STATION", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 沒有可用的中繼資料文件。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WNSModel", Name="REGISTER_STATION")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class REGISTER_STATION : EntityObject
    {
        #region Factory 方法
    
        /// <summary>
        /// 建立新 REGISTER_STATION 物件。
        /// </summary>
        /// <param name="rEGISTER_NO">REGISTER_NO 屬性的初始值。</param>
        /// <param name="rEGISTER_POI_SEQ">REGISTER_POI_SEQ 屬性的初始值。</param>
        /// <param name="sEQ">SEQ 屬性的初始值。</param>
        /// <param name="sTATION_ID">STATION_ID 屬性的初始值。</param>
        public static REGISTER_STATION CreateREGISTER_STATION(global::System.Int64 rEGISTER_NO, global::System.Int64 rEGISTER_POI_SEQ, global::System.Int64 sEQ, global::System.String sTATION_ID)
        {
            REGISTER_STATION rEGISTER_STATION = new REGISTER_STATION();
            rEGISTER_STATION.REGISTER_NO = rEGISTER_NO;
            rEGISTER_STATION.REGISTER_POI_SEQ = rEGISTER_POI_SEQ;
            rEGISTER_STATION.SEQ = sEQ;
            rEGISTER_STATION.STATION_ID = sTATION_ID;
            return rEGISTER_STATION;
        }

        #endregion
        #region 基本屬性
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 REGISTER_NO
        {
            get
            {
                return _REGISTER_NO;
            }
            set
            {
                if (_REGISTER_NO != value)
                {
                    OnREGISTER_NOChanging(value);
                    ReportPropertyChanging("REGISTER_NO");
                    _REGISTER_NO = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("REGISTER_NO");
                    OnREGISTER_NOChanged();
                }
            }
        }
        private global::System.Int64 _REGISTER_NO;
        partial void OnREGISTER_NOChanging(global::System.Int64 value);
        partial void OnREGISTER_NOChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 REGISTER_POI_SEQ
        {
            get
            {
                return _REGISTER_POI_SEQ;
            }
            set
            {
                if (_REGISTER_POI_SEQ != value)
                {
                    OnREGISTER_POI_SEQChanging(value);
                    ReportPropertyChanging("REGISTER_POI_SEQ");
                    _REGISTER_POI_SEQ = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("REGISTER_POI_SEQ");
                    OnREGISTER_POI_SEQChanged();
                }
            }
        }
        private global::System.Int64 _REGISTER_POI_SEQ;
        partial void OnREGISTER_POI_SEQChanging(global::System.Int64 value);
        partial void OnREGISTER_POI_SEQChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 SEQ
        {
            get
            {
                return _SEQ;
            }
            set
            {
                if (_SEQ != value)
                {
                    OnSEQChanging(value);
                    ReportPropertyChanging("SEQ");
                    _SEQ = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SEQ");
                    OnSEQChanged();
                }
            }
        }
        private global::System.Int64 _SEQ;
        partial void OnSEQChanging(global::System.Int64 value);
        partial void OnSEQChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String STATION_ID
        {
            get
            {
                return _STATION_ID;
            }
            set
            {
                OnSTATION_IDChanging(value);
                ReportPropertyChanging("STATION_ID");
                _STATION_ID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("STATION_ID");
                OnSTATION_IDChanged();
            }
        }
        private global::System.String _STATION_ID;
        partial void OnSTATION_IDChanging(global::System.String value);
        partial void OnSTATION_IDChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UPSTREAM
        {
            get
            {
                return _UPSTREAM;
            }
            set
            {
                OnUPSTREAMChanging(value);
                ReportPropertyChanging("UPSTREAM");
                _UPSTREAM = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UPSTREAM");
                OnUPSTREAMChanged();
            }
        }
        private global::System.String _UPSTREAM;
        partial void OnUPSTREAMChanging(global::System.String value);
        partial void OnUPSTREAMChanged();

        #endregion
    
        #region 導覽屬性
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WNSModel", "FK_REGISTER_STATION_REGISTER_POI", "REGISTER_POI")]
        public REGISTER_POI REGISTER_POI
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<REGISTER_POI>("WNSModel.FK_REGISTER_STATION_REGISTER_POI", "REGISTER_POI").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<REGISTER_POI>("WNSModel.FK_REGISTER_STATION_REGISTER_POI", "REGISTER_POI").Value = value;
            }
        }
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<REGISTER_POI> REGISTER_POIReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<REGISTER_POI>("WNSModel.FK_REGISTER_STATION_REGISTER_POI", "REGISTER_POI");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<REGISTER_POI>("WNSModel.FK_REGISTER_STATION_REGISTER_POI", "REGISTER_POI", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 沒有可用的中繼資料文件。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WNSModel", Name="STATION")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class STATION : EntityObject
    {
        #region Factory 方法
    
        /// <summary>
        /// 建立新 STATION 物件。
        /// </summary>
        /// <param name="sTATION_ID">STATION_ID 屬性的初始值。</param>
        /// <param name="sTATION_TYPE">STATION_TYPE 屬性的初始值。</param>
        /// <param name="lAST_UPDATE_TIME">LAST_UPDATE_TIME 屬性的初始值。</param>
        public static STATION CreateSTATION(global::System.String sTATION_ID, global::System.String sTATION_TYPE, global::System.DateTime lAST_UPDATE_TIME)
        {
            STATION sTATION = new STATION();
            sTATION.STATION_ID = sTATION_ID;
            sTATION.STATION_TYPE = sTATION_TYPE;
            sTATION.LAST_UPDATE_TIME = lAST_UPDATE_TIME;
            return sTATION;
        }

        #endregion
        #region 基本屬性
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String STATION_ID
        {
            get
            {
                return _STATION_ID;
            }
            set
            {
                if (_STATION_ID != value)
                {
                    OnSTATION_IDChanging(value);
                    ReportPropertyChanging("STATION_ID");
                    _STATION_ID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("STATION_ID");
                    OnSTATION_IDChanged();
                }
            }
        }
        private global::System.String _STATION_ID;
        partial void OnSTATION_IDChanging(global::System.String value);
        partial void OnSTATION_IDChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String STATION_TYPE
        {
            get
            {
                return _STATION_TYPE;
            }
            set
            {
                OnSTATION_TYPEChanging(value);
                ReportPropertyChanging("STATION_TYPE");
                _STATION_TYPE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("STATION_TYPE");
                OnSTATION_TYPEChanged();
            }
        }
        private global::System.String _STATION_TYPE;
        partial void OnSTATION_TYPEChanging(global::System.String value);
        partial void OnSTATION_TYPEChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> SW_FLOW
        {
            get
            {
                return _SW_FLOW;
            }
            set
            {
                OnSW_FLOWChanging(value);
                ReportPropertyChanging("SW_FLOW");
                _SW_FLOW = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SW_FLOW");
                OnSW_FLOWChanged();
            }
        }
        private Nullable<global::System.Double> _SW_FLOW;
        partial void OnSW_FLOWChanging(Nullable<global::System.Double> value);
        partial void OnSW_FLOWChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> SW_LEVEL
        {
            get
            {
                return _SW_LEVEL;
            }
            set
            {
                OnSW_LEVELChanging(value);
                ReportPropertyChanging("SW_LEVEL");
                _SW_LEVEL = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SW_LEVEL");
                OnSW_LEVELChanged();
            }
        }
        private Nullable<global::System.Double> _SW_LEVEL;
        partial void OnSW_LEVELChanging(Nullable<global::System.Double> value);
        partial void OnSW_LEVELChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LAST_UPDATE_TIME
        {
            get
            {
                return _LAST_UPDATE_TIME;
            }
            set
            {
                OnLAST_UPDATE_TIMEChanging(value);
                ReportPropertyChanging("LAST_UPDATE_TIME");
                _LAST_UPDATE_TIME = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LAST_UPDATE_TIME");
                OnLAST_UPDATE_TIMEChanged();
            }
        }
        private global::System.DateTime _LAST_UPDATE_TIME;
        partial void OnLAST_UPDATE_TIMEChanging(global::System.DateTime value);
        partial void OnLAST_UPDATE_TIMEChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> LNG
        {
            get
            {
                return _LNG;
            }
            set
            {
                OnLNGChanging(value);
                ReportPropertyChanging("LNG");
                _LNG = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LNG");
                OnLNGChanged();
            }
        }
        private Nullable<global::System.Double> _LNG;
        partial void OnLNGChanging(Nullable<global::System.Double> value);
        partial void OnLNGChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> LAT
        {
            get
            {
                return _LAT;
            }
            set
            {
                OnLATChanging(value);
                ReportPropertyChanging("LAT");
                _LAT = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LAT");
                OnLATChanged();
            }
        }
        private Nullable<global::System.Double> _LAT;
        partial void OnLATChanging(Nullable<global::System.Double> value);
        partial void OnLATChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> GW_LEVEL
        {
            get
            {
                return _GW_LEVEL;
            }
            set
            {
                OnGW_LEVELChanging(value);
                ReportPropertyChanging("GW_LEVEL");
                _GW_LEVEL = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GW_LEVEL");
                OnGW_LEVELChanged();
            }
        }
        private Nullable<global::System.Double> _GW_LEVEL;
        partial void OnGW_LEVELChanging(Nullable<global::System.Double> value);
        partial void OnGW_LEVELChanged();

        #endregion
    
        #region 導覽屬性
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WNSModel", "FK_STATION_UPDATE_FLAG_STATION", "STATION_UPDATE_FLAG")]
        public EntityCollection<STATION_UPDATE_FLAG> STATION_UPDATE_FLAG
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<STATION_UPDATE_FLAG>("WNSModel.FK_STATION_UPDATE_FLAG_STATION", "STATION_UPDATE_FLAG");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<STATION_UPDATE_FLAG>("WNSModel.FK_STATION_UPDATE_FLAG_STATION", "STATION_UPDATE_FLAG", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 沒有可用的中繼資料文件。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WNSModel", Name="STATION_UPDATE_FLAG")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class STATION_UPDATE_FLAG : EntityObject
    {
        #region Factory 方法
    
        /// <summary>
        /// 建立新 STATION_UPDATE_FLAG 物件。
        /// </summary>
        /// <param name="uUID">UUID 屬性的初始值。</param>
        /// <param name="hAS_NEW_DATA">HAS_NEW_DATA 屬性的初始值。</param>
        /// <param name="uPDATETIME">UPDATETIME 屬性的初始值。</param>
        public static STATION_UPDATE_FLAG CreateSTATION_UPDATE_FLAG(global::System.String uUID, global::System.Boolean hAS_NEW_DATA, global::System.DateTime uPDATETIME)
        {
            STATION_UPDATE_FLAG sTATION_UPDATE_FLAG = new STATION_UPDATE_FLAG();
            sTATION_UPDATE_FLAG.UUID = uUID;
            sTATION_UPDATE_FLAG.HAS_NEW_DATA = hAS_NEW_DATA;
            sTATION_UPDATE_FLAG.UPDATETIME = uPDATETIME;
            return sTATION_UPDATE_FLAG;
        }

        #endregion
        #region 基本屬性
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UUID
        {
            get
            {
                return _UUID;
            }
            set
            {
                if (_UUID != value)
                {
                    OnUUIDChanging(value);
                    ReportPropertyChanging("UUID");
                    _UUID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("UUID");
                    OnUUIDChanged();
                }
            }
        }
        private global::System.String _UUID;
        partial void OnUUIDChanging(global::System.String value);
        partial void OnUUIDChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean HAS_NEW_DATA
        {
            get
            {
                return _HAS_NEW_DATA;
            }
            set
            {
                OnHAS_NEW_DATAChanging(value);
                ReportPropertyChanging("HAS_NEW_DATA");
                _HAS_NEW_DATA = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HAS_NEW_DATA");
                OnHAS_NEW_DATAChanged();
            }
        }
        private global::System.Boolean _HAS_NEW_DATA;
        partial void OnHAS_NEW_DATAChanging(global::System.Boolean value);
        partial void OnHAS_NEW_DATAChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime UPDATETIME
        {
            get
            {
                return _UPDATETIME;
            }
            set
            {
                OnUPDATETIMEChanging(value);
                ReportPropertyChanging("UPDATETIME");
                _UPDATETIME = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UPDATETIME");
                OnUPDATETIMEChanged();
            }
        }
        private global::System.DateTime _UPDATETIME;
        partial void OnUPDATETIMEChanging(global::System.DateTime value);
        partial void OnUPDATETIMEChanged();

        #endregion
    
        #region 導覽屬性
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WNSModel", "FK_STATION_UPDATE_FLAG_STATION", "STATION")]
        public STATION STATION
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<STATION>("WNSModel.FK_STATION_UPDATE_FLAG_STATION", "STATION").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<STATION>("WNSModel.FK_STATION_UPDATE_FLAG_STATION", "STATION").Value = value;
            }
        }
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<STATION> STATIONReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<STATION>("WNSModel.FK_STATION_UPDATE_FLAG_STATION", "STATION");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<STATION>("WNSModel.FK_STATION_UPDATE_FLAG_STATION", "STATION", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 沒有可用的中繼資料文件。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WNSModel", Name="USER")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class USER : EntityObject
    {
        #region Factory 方法
    
        /// <summary>
        /// 建立新 USER 物件。
        /// </summary>
        /// <param name="uID">UID 屬性的初始值。</param>
        /// <param name="eMAIL">EMAIL 屬性的初始值。</param>
        public static USER CreateUSER(global::System.Int64 uID, global::System.String eMAIL)
        {
            USER uSER = new USER();
            uSER.UID = uID;
            uSER.EMAIL = eMAIL;
            return uSER;
        }

        #endregion
        #region 基本屬性
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 UID
        {
            get
            {
                return _UID;
            }
            set
            {
                if (_UID != value)
                {
                    OnUIDChanging(value);
                    ReportPropertyChanging("UID");
                    _UID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UID");
                    OnUIDChanged();
                }
            }
        }
        private global::System.Int64 _UID;
        partial void OnUIDChanging(global::System.Int64 value);
        partial void OnUIDChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EMAIL
        {
            get
            {
                return _EMAIL;
            }
            set
            {
                OnEMAILChanging(value);
                ReportPropertyChanging("EMAIL");
                _EMAIL = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EMAIL");
                OnEMAILChanged();
            }
        }
        private global::System.String _EMAIL;
        partial void OnEMAILChanging(global::System.String value);
        partial void OnEMAILChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NAME
        {
            get
            {
                return _NAME;
            }
            set
            {
                OnNAMEChanging(value);
                ReportPropertyChanging("NAME");
                _NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NAME");
                OnNAMEChanged();
            }
        }
        private global::System.String _NAME;
        partial void OnNAMEChanging(global::System.String value);
        partial void OnNAMEChanged();

        #endregion
    
    }

    #endregion
    
}
